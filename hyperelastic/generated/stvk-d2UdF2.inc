void d2UdF2(const VectorXd& Fv, double lame1, double lame2, MatrixXd& out) {
    double x0[9];
    x0[0] = Fv[0];
    x0[1] = Fv[1];
    x0[2] = Fv[2];
    x0[3] = Fv[3];
    x0[4] = Fv[4];
    x0[5] = Fv[5];
    x0[6] = Fv[6];
    x0[7] = Fv[7];
    x0[8] = Fv[8];
    const double x1 = x0[0];
    const double x2 = pow(x1, 2);
    const double x3 = x0[1];
    const double x4 = pow(x3, 2);
    const double x5 = x0[3];
    const double x6 = pow(x5, 2);
    const double x7 = x4 + x6;
    const double x8 = x0[6];
    const double x9 = pow(x8, 2);
    const double x10 = x0[2];
    const double x11 = pow(x10, 2);
    const double x12 = x11 - 1;
    const double x13 = x12 + x9;
    const double x14 = x0[5];
    const double x15 = pow(x14, 2);
    const double x16 = x0[8];
    const double x17 = pow(x16, 2);
    const double x18 = x0[7];
    const double x19 = pow(x18, 2);
    const double x20 = x0[4];
    const double x21 = pow(x20, 2);
    const double x22 = x2 + x21;
    const double x23 = x19 + x22;
    const double x24 = (1.0/2.0)*lame1*(x11 + x15 + x17 + x23 + x7 + x9 - 3);
    const double x25 = x1*x3;
    const double x26 = x20*x5;
    const double x27 = x18*x8;
    const double x28 = lame1*x25 + lame2*(2*x25 + x26 + x27);
    const double x29 = x1*x10;
    const double x30 = x14*x5;
    const double x31 = x16*x8;
    const double x32 = lame1*x29 + lame2*(2*x29 + x30 + x31);
    const double x33 = x1*x5;
    const double x34 = x20*x3;
    const double x35 = x10*x14;
    const double x36 = lame1*x33 + lame2*(2*x33 + x34 + x35);
    const double x37 = lame1*x1;
    const double x38 = lame2*x5;
    const double x39 = x20*x37 + x3*x38;
    const double x40 = x10*x38 + x14*x37;
    const double x41 = x1*x8;
    const double x42 = x18*x3;
    const double x43 = x10*x16;
    const double x44 = lame1*x41 + lame2*(2*x41 + x42 + x43);
    const double x45 = lame2*x8;
    const double x46 = x18*x37 + x3*x45;
    const double x47 = x10*x45 + x16*x37;
    const double x48 = x10*x3;
    const double x49 = x14*x20;
    const double x50 = x16*x18;
    const double x51 = lame1*x48 + lame2*(2*x48 + x49 + x50);
    const double x52 = lame1*x3;
    const double x53 = lame2*x20;
    const double x54 = x1*x53 + x5*x52;
    const double x55 = lame1*x34 + lame2*(x33 + 2*x34 + x35);
    const double x56 = x10*x53 + x14*x52;
    const double x57 = lame2*x18;
    const double x58 = x1*x57 + x52*x8;
    const double x59 = lame1*x42 + lame2*(x41 + 2*x42 + x43);
    const double x60 = x10*x57 + x16*x52;
    const double x61 = x15 - 1;
    const double x62 = x17 + x2;
    const double x63 = lame1*x10;
    const double x64 = lame2*x14;
    const double x65 = x1*x64 + x5*x63;
    const double x66 = x20*x63 + x3*x64;
    const double x67 = lame1*x35 + lame2*(x33 + x34 + 2*x35);
    const double x68 = lame2*x16;
    const double x69 = x1*x68 + x63*x8;
    const double x70 = x18*x63 + x3*x68;
    const double x71 = lame1*x43 + lame2*(x41 + x42 + 2*x43);
    const double x72 = lame1*x26 + lame2*(x25 + 2*x26 + x27);
    const double x73 = lame1*x30 + lame2*(x29 + 2*x30 + x31);
    const double x74 = x5*x8;
    const double x75 = x18*x20;
    const double x76 = x14*x16;
    const double x77 = lame1*x74 + lame2*(2*x74 + x75 + x76);
    const double x78 = lame1*x5;
    const double x79 = x18*x78 + x20*x45;
    const double x80 = x14*x45 + x16*x78;
    const double x81 = lame1*x49 + lame2*(x48 + 2*x49 + x50);
    const double x82 = lame1*x20;
    const double x83 = x18*x38 + x8*x82;
    const double x84 = lame1*x75 + lame2*(x74 + 2*x75 + x76);
    const double x85 = x14*x57 + x16*x82;
    const double x86 = x17 + x21;
    const double x87 = lame1*x14;
    const double x88 = x16*x38 + x8*x87;
    const double x89 = x16*x53 + x18*x87;
    const double x90 = lame1*x76 + lame2*(x74 + x75 + 2*x76);
    const double x91 = lame1*x27 + lame2*(x25 + x26 + 2*x27);
    const double x92 = lame1*x31 + lame2*(x29 + x30 + 2*x31);
    const double x93 = lame1*x50 + lame2*(x48 + x49 + 2*x50);

    out.resize(9, 9);
    out(0, 0) = lame1*x2 + lame2*(x13 + 3*x2 + x7) + x24;
    out(0, 1) = x28;
    out(0, 2) = x32;
    out(0, 3) = x36;
    out(0, 4) = x39;
    out(0, 5) = x40;
    out(0, 6) = x44;
    out(0, 7) = x46;
    out(0, 8) = x47;
    out(1, 0) = x28;
    out(1, 1) = lame1*x4 + lame2*(x12 + x23 + 3*x4) + x24;
    out(1, 2) = x51;
    out(1, 3) = x54;
    out(1, 4) = x55;
    out(1, 5) = x56;
    out(1, 6) = x58;
    out(1, 7) = x59;
    out(1, 8) = x60;
    out(2, 0) = x32;
    out(2, 1) = x51;
    out(2, 2) = lame1*x11 + lame2*(3*x11 + x4 + x61 + x62) + x24;
    out(2, 3) = x65;
    out(2, 4) = x66;
    out(2, 5) = x67;
    out(2, 6) = x69;
    out(2, 7) = x70;
    out(2, 8) = x71;
    out(3, 0) = x36;
    out(3, 1) = x54;
    out(3, 2) = x65;
    out(3, 3) = lame1*x6 + lame2*(x22 + 3*x6 + x61 + x9) + x24;
    out(3, 4) = x72;
    out(3, 5) = x73;
    out(3, 6) = x77;
    out(3, 7) = x79;
    out(3, 8) = x80;
    out(4, 0) = x39;
    out(4, 1) = x55;
    out(4, 2) = x66;
    out(4, 3) = x72;
    out(4, 4) = lame1*x21 + lame2*(x19 + 3*x21 + x61 + x7) + x24;
    out(4, 5) = x81;
    out(4, 6) = x83;
    out(4, 7) = x84;
    out(4, 8) = x85;
    out(5, 0) = x40;
    out(5, 1) = x56;
    out(5, 2) = x67;
    out(5, 3) = x73;
    out(5, 4) = x81;
    out(5, 5) = lame1*x15 + lame2*(x12 + 3*x15 + x6 + x86) + x24;
    out(5, 6) = x88;
    out(5, 7) = x89;
    out(5, 8) = x90;
    out(6, 0) = x44;
    out(6, 1) = x58;
    out(6, 2) = x69;
    out(6, 3) = x77;
    out(6, 4) = x83;
    out(6, 5) = x88;
    out(6, 6) = lame1*x9 + lame2*(x19 + x6 + x62 + 3*x9 - 1) + x24;
    out(6, 7) = x91;
    out(6, 8) = x92;
    out(7, 0) = x46;
    out(7, 1) = x59;
    out(7, 2) = x70;
    out(7, 3) = x79;
    out(7, 4) = x84;
    out(7, 5) = x89;
    out(7, 6) = x91;
    out(7, 7) = lame1*x19 + lame2*(3*x19 + x4 + x86 + x9 - 1) + x24;
    out(7, 8) = x93;
    out(8, 0) = x47;
    out(8, 1) = x60;
    out(8, 2) = x71;
    out(8, 3) = x80;
    out(8, 4) = x85;
    out(8, 5) = x90;
    out(8, 6) = x92;
    out(8, 7) = x93;
    out(8, 8) = lame1*x17 + lame2*(x13 + x15 + 3*x17 + x19) + x24;

}
