void dRdFG(const VectorXd& Fv, const VectorXd& Gv, double beta, double lame1, double lame2, VectorXd& out) {
    double x0[9];
    x0[0] = Gv[0];
    x0[1] = Gv[1];
    x0[2] = Gv[2];
    x0[3] = Gv[3];
    x0[4] = Gv[4];
    x0[5] = Gv[5];
    x0[6] = Gv[6];
    x0[7] = Gv[7];
    x0[8] = Gv[8];
    const double x1 = x0[0];
    double x2[9];
    x2[0] = Fv[0];
    x2[1] = Fv[1];
    x2[2] = Fv[2];
    x2[3] = Fv[3];
    x2[4] = Fv[4];
    x2[5] = Fv[5];
    x2[6] = Fv[6];
    x2[7] = Fv[7];
    x2[8] = Fv[8];
    const double x3 = x2[0];
    const double x4 = x2[3];
    const double x5 = x0[3];
    const double x6 = x2[6];
    const double x7 = x0[6];
    const double x8 = x1*x3 + x4*x5 + x6*x7;
    const double x9 = x2[1];
    const double x10 = x0[1];
    const double x11 = x2[4];
    const double x12 = x0[4];
    const double x13 = x2[7];
    const double x14 = x0[7];
    const double x15 = x10*x9 + x11*x12 + x13*x14;
    const double x16 = x2[2];
    const double x17 = x0[2];
    const double x18 = x2[5];
    const double x19 = x0[5];
    const double x20 = x2[8];
    const double x21 = x0[8];
    const double x22 = x16*x17 + x18*x19 + x20*x21;
    const double x23 = lame1*(x15 + x22 + x8);
    const double x24 = 2*x8;
    const double x25 = x1*x9 + x10*x3 + x11*x5 + x12*x4 + x13*x7 + x14*x6;
    const double x26 = x1*x16 + x17*x3 + x18*x5 + x19*x4 + x20*x7 + x21*x6;
    const double x27 = 2*x15;
    const double x28 = x10*x16 + x11*x19 + x12*x18 + x13*x21 + x14*x20 + x17*x9;
    const double x29 = 2*x22;

    out.resize(18);
    out[0] = beta*(lame2*(x1*x24 + x10*x25 + x17*x26) + x1*x23);
    out[1] = beta*(lame2*(x1*x25 + x10*x27 + x17*x28) + x10*x23);
    out[2] = beta*(lame2*(x1*x26 + x10*x28 + x17*x29) + x17*x23);
    out[3] = beta*(lame2*(x12*x25 + x19*x26 + x24*x5) + x23*x5);
    out[4] = beta*(lame2*(x12*x27 + x19*x28 + x25*x5) + x12*x23);
    out[5] = beta*(lame2*(x12*x28 + x19*x29 + x26*x5) + x19*x23);
    out[6] = beta*(lame2*(x14*x25 + x21*x26 + x24*x7) + x23*x7);
    out[7] = beta*(lame2*(x14*x27 + x21*x28 + x25*x7) + x14*x23);
    out[8] = beta*(lame2*(x14*x28 + x21*x29 + x26*x7) + x21*x23);
    out[9] = beta*(lame2*(x16*x26 + x24*x3 + x25*x9) + x23*x3);
    out[10] = beta*(lame2*(x16*x28 + x25*x3 + x27*x9) + x23*x9);
    out[11] = beta*(lame2*(x16*x29 + x26*x3 + x28*x9) + x16*x23);
    out[12] = beta*(lame2*(x11*x25 + x18*x26 + x24*x4) + x23*x4);
    out[13] = beta*(lame2*(x11*x27 + x18*x28 + x25*x4) + x11*x23);
    out[14] = beta*(lame2*(x11*x28 + x18*x29 + x26*x4) + x18*x23);
    out[15] = beta*(lame2*(x13*x25 + x20*x26 + x24*x6) + x23*x6);
    out[16] = beta*(lame2*(x13*x27 + x20*x28 + x25*x6) + x13*x23);
    out[17] = beta*(lame2*(x13*x28 + x20*x29 + x26*x6) + x20*x23);

}
